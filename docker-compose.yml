version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    depends_on:
      - command-service
      - query-service
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - cqrs-network

  command-service:
    build:
      context: ./command-service
      dockerfile: DockerFile
    container_name: command-service
    restart: always
    depends_on:
      - mysql
      - redis
      - rabbitmq
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - DB_DATABASE=payments_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - CACHE_DRIVER=redis
      - QUEUE_CONNECTION=redis
    networks:
      - cqrs-network
    volumes:
      - ./command-service:/var/www
      - ./command-service/storage:/var/www/storage
      - ./command-service/vendor:/var/www/vendor

  query-service:
    build:
      context: ./query-service
      dockerfile: DockerFile
    container_name: query-service
    restart: always
    depends_on:
      - mysql
      - redis
      - rabbitmq
    environment:
      - APP_ENV=local
      - DB_HOST=mysql
      - DB_DATABASE=payments_db
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - CACHE_DRIVER=redis
    networks:
      - cqrs-network
    volumes:
      - ./query-service:/var/www
      - ./query-service/storage:/var/www/storage
      - ./query-service/vendor:/var/www/vendor

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: payments_db
    ports:
      - "3306:3306"
    networks:
      - cqrs-network
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - cqrs-network
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - cqrs-network
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

networks:
  cqrs-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
